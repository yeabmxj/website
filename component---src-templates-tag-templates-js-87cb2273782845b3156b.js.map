{"version":3,"sources":["webpack:///./src/components/header.js","webpack:///./src/components/layout.js","webpack:///./node_modules/core-js/modules/_string-html.js","webpack:///./src/templates/tagTemplates.js","webpack:///./node_modules/core-js/modules/es6.string.link.js"],"names":["Header","siteTitle","menuLinks","style","background","marginBottom","margin","maxWidth","padding","display","justifyItems","alignItems","flex","to","color","textDecoration","map","link","key","name","listStyleType","defaultProps","Layout","children","data","site","siteMetadata","title","Date","getFullYear","href","$export","fails","defined","quot","createHTML","string","tag","attribute","value","S","String","p1","replace","module","exports","NAME","exec","O","P","F","test","toLowerCase","split","length","Tags","pageContext","allMarkdownRemark","edges","totalCount","tagHeader","node","frontmatter","date","slug","fields","pageQuery","url","this"],"mappings":"4LAKMA,EAAS,SAAC,GAAD,IAAGC,EAAH,EAAGA,UAAWC,EAAd,EAAcA,UAAd,OACb,4BACEC,MAAO,CACLC,WAAY,gBACZC,aAAc,YAGhB,yBACEF,MAAO,CACLC,WAAY,gBACZC,aAAc,YAGhB,yBACEF,MAAO,CACLG,OAAQ,SACRC,SAAU,IACVC,QAAS,oBACTC,QAAS,OACTC,aAAc,gBACdC,WAAY,WAGd,wBAAIR,MAAO,CAAEG,OAAQ,EAAGM,KAAM,IAC5B,kBAAC,OAAD,CACEC,GAAG,IACHV,MAAO,CACLW,MAAO,QACPC,eAAgB,SAGjBd,IAGL,6BACE,6BACE,wBAAIE,MAAO,CAAEM,QAAS,OAAQG,KAAM,IACjCV,EAAUc,KAAI,SAAAC,GAAI,OACjB,wBACEC,IAAKD,EAAKE,KACVhB,MAAO,CACLiB,cAAc,OACdZ,QAAQ,SAGV,kBAAC,OAAD,CAAML,MAAO,CAAEW,MAAM,QAAUC,eAAe,QAAWF,GAAII,EAAKA,MAC/DA,EAAKE,iBAgB1BnB,EAAOqB,aAAe,CACpBpB,UAAU,IAGGD,Q,oBChBAsB,IAxCA,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACVC,EAAI,OAcV,OACE,oCACE,kBAAC,EAAD,CAAQtB,UAAWsB,EAAKC,KAAKC,aAAaxB,UAAWD,UAAWuB,EAAKC,KAAKC,aAAaC,QACvF,yBACExB,MAAO,CACLG,OAAO,SACPC,SAAU,IACVC,QAAQ,wBAGV,8BAAOe,GACP,sCACK,IAAIK,MAAOC,cADhB,mBAGE,uBAAGC,KAAK,4BAAR,e,qBC5CV,IAAIC,EAAU,EAAQ,QAClBC,EAAQ,EAAQ,QAChBC,EAAU,EAAQ,QAClBC,EAAO,KAEPC,EAAa,SAAUC,EAAQC,EAAKC,EAAWC,GACjD,IAAIC,EAAIC,OAAOR,EAAQG,IACnBM,EAAK,IAAML,EAEf,MADkB,KAAdC,IAAkBI,GAAM,IAAMJ,EAAY,KAAOG,OAAOF,GAAOI,QAAQT,EAAM,UAAY,KACtFQ,EAAK,IAAMF,EAAI,KAAOH,EAAM,KAErCO,EAAOC,QAAU,SAAUC,EAAMC,GAC/B,IAAIC,EAAI,GACRA,EAAEF,GAAQC,EAAKZ,GACfJ,EAAQA,EAAQkB,EAAIlB,EAAQmB,EAAIlB,GAAM,WACpC,IAAImB,EAAO,GAAGL,GAAM,KACpB,OAAOK,IAASA,EAAKC,eAAiBD,EAAKE,MAAM,KAAKC,OAAS,KAC7D,SAAUN,K,yDCjBhB,kGAiCeO,UA7BF,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,YAAahC,EAAW,EAAXA,KACnBa,EAAQmB,EAARnB,IAD8B,EAERb,EAAKiC,kBAA3BC,EAF8B,EAE9BA,MAAOC,EAFuB,EAEvBA,WACTC,EAAeD,EAAN,SACE,IAAfA,EAAmB,GAAK,KADX,iBAEEtB,EAFF,IAGf,OACE,kBAAC,IAAD,KACE,6BACE,4BAAKuB,GACL,4BACGF,EAAM1C,KAAI,YAAe,IAAZ6C,EAAW,EAAXA,KAAW,EACCA,EAAKC,YAArBnC,EADe,EACfA,MAAOoC,EADQ,EACRA,KACPC,EAASH,EAAKI,OAAdD,KACR,OACE,wBAAI9C,IAAK8C,GACP,kBAAC,OAAD,CAAMnD,GAAImD,GACPrC,EADH,KACYoC,EADZ,UAOR,kBAAC,OAAD,CAAMlD,GAAG,SAAT,eAQD,IAAMqD,EAAS,c,uQCjCtB,EAAQ,OAAR,CAA0B,QAAQ,SAAU/B,GAC1C,OAAO,SAAcgC,GACnB,OAAOhC,EAAWiC,KAAM,IAAK,OAAQD","file":"component---src-templates-tag-templates-js-87cb2273782845b3156b.js","sourcesContent":["\r\nimport PropTypes from \"prop-types\"\r\n\r\nimport React from \"react\"\r\nimport { Link } from \"gatsby\"\r\nconst Header = ({ siteTitle, menuLinks }) => (\r\n  <header\r\n    style={{\r\n      background: \"rebeccapurple\",\r\n      marginBottom: \"1.45rem\",\r\n    }}\r\n  >\r\n    <div\r\n      style={{\r\n        background: \"rebeccapurple\",\r\n        marginBottom: \"1.45rem\",\r\n      }}\r\n    >\r\n      <div\r\n        style={{\r\n          margin: \"0 auto\",\r\n          maxWidth: 960,\r\n          padding: \"1.45rem 1.0875rem\",\r\n          display: \"flex\",\r\n          justifyItems: \"space-between\",\r\n          alignItems: \"center\",\r\n        }}\r\n      >\r\n        <h1 style={{ margin: 0, flex: 1 }}>\r\n          <Link\r\n            to=\"/\"\r\n            style={{\r\n              color: \"white\",\r\n              textDecoration: \"none\",\r\n            }}\r\n          >\r\n            {siteTitle}\r\n          </Link>\r\n        </h1>\r\n        <div>\r\n          <nav>\r\n            <ul style={{ display: \"flex\", flex: 1 }}>\r\n              {menuLinks.map(link => (\r\n                <li\r\n                  key={link.name}\r\n                  style={{\r\n                    listStyleType: `none`,\r\n                    padding: `1rem`,\r\n                  }}\r\n                >\r\n                  <Link style={{ color: `white`, textDecoration: `none` }} to={link.link}>\r\n                    {link.name}\r\n                  </Link>\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          </nav>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </header>\r\n)\r\n\r\nHeader.propTypes = {\r\n  siteTitle: PropTypes.string,\r\n}\r\n\r\nHeader.defaultProps = {\r\n  siteTitle: ``,\r\n}\r\n\r\nexport default Header","/**\r\n * Layout component that queries for data\r\n * with Gatsby's useStaticQuery component\r\n *\r\n * See: https://www.gatsbyjs.org/docs/use-static-query/\r\n */\r\n\r\nimport React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\n\r\nimport Header from \"./header\"\r\nimport \"./layout.css\"\r\nimport '../styles/styles.scss';\r\n\r\nconst Layout = ({ children }) => {\r\n  const data = useStaticQuery(graphql`\r\n    query SiteTitleQuery {\r\n      site {\r\n        siteMetadata {\r\n          title\r\n          menuLinks {\r\n            name\r\n            link\r\n          }\r\n        }\r\n      }\r\n    }\r\n  `)\r\n\r\n  return (\r\n    <>\r\n      <Header menuLinks={data.site.siteMetadata.menuLinks} siteTitle={data.site.siteMetadata.title} />\r\n      <div\r\n        style={{\r\n          margin: `0 auto`,\r\n          maxWidth: 960,\r\n          padding: `0 1.0875rem 1.45rem`,\r\n        }}\r\n      >\r\n        <main>{children}</main>\r\n        <footer>\r\n          Â© {new Date().getFullYear()}, Built with\r\n          {` `}\r\n          <a href=\"https://www.gatsbyjs.org\">Gatsby</a>\r\n        </footer>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nLayout.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n}\r\n\r\nexport default Layout\r\n","var $export = require('./_export');\nvar fails = require('./_fails');\nvar defined = require('./_defined');\nvar quot = /\"/g;\n// B.2.3.2.1 CreateHTML(string, tag, attribute, value)\nvar createHTML = function (string, tag, attribute, value) {\n  var S = String(defined(string));\n  var p1 = '<' + tag;\n  if (attribute !== '') p1 += ' ' + attribute + '=\"' + String(value).replace(quot, '&quot;') + '\"';\n  return p1 + '>' + S + '</' + tag + '>';\n};\nmodule.exports = function (NAME, exec) {\n  var O = {};\n  O[NAME] = exec(createHTML);\n  $export($export.P + $export.F * fails(function () {\n    var test = ''[NAME]('\"');\n    return test !== test.toLowerCase() || test.split('\"').length > 3;\n  }), 'String', O);\n};\n","import React from 'react';\r\nimport { Link, graphql } from 'gatsby';\r\nimport Layout from '../components/layout';\r\n\r\nconst Tags = ({ pageContext, data }) => {\r\n  const { tag } = pageContext;\r\n  const { edges, totalCount } = data.allMarkdownRemark;\r\n  const tagHeader = `${totalCount} post${\r\n    totalCount === 1 ? '' : 's'\r\n  } tagged with \"${tag}\"`;\r\n  return (\r\n    <Layout>\r\n      <div>\r\n        <h1>{tagHeader}</h1>\r\n        <ul>\r\n          {edges.map(({ node }) => {\r\n            const { title, date } = node.frontmatter;\r\n            const { slug } = node.fields;\r\n            return (\r\n              <li key={slug}>\r\n                <Link to={slug}>\r\n                  {title} ({date})\r\n                </Link>\r\n              </li>\r\n            );\r\n          })}\r\n        </ul>\r\n        <Link to=\"/tags\">All tags</Link>\r\n      </div>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Tags;\r\n\r\nexport const pageQuery = graphql`\r\n  query($tag: String) {\r\n    allMarkdownRemark(\r\n      limit: 2000\r\n      sort: { fields: [frontmatter___date], order: DESC }\r\n      filter: { frontmatter: { tags: { in: [$tag] } } }\r\n    ) {\r\n      totalCount\r\n      edges {\r\n        node {\r\n          fields {\r\n            slug\r\n          }\r\n          frontmatter {\r\n            title\r\n            date(formatString: \"MMMM DD, YYYY\")\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;","'use strict';\n// B.2.3.10 String.prototype.link(url)\nrequire('./_string-html')('link', function (createHTML) {\n  return function link(url) {\n    return createHTML(this, 'a', 'href', url);\n  };\n});\n"],"sourceRoot":""}